syntax = "proto3";

package shackbus.audio;

option go_package = "./sb_audio";

service Server{
    rpc GetCapabilities(None) returns(Capabilities);
    rpc GetState(None) returns(State);
    rpc StartStream(None) returns(None);
    rpc StopStream(None) returns(None);
    rpc Ping(PingPong) returns(PingPong);
}

message None{}

message Capabilities{
    string name = 1; // name of the server
    string rx_stream_address = 2; // where the Server publishes audio from the radio
    string tx_stream_address = 3; // where the Server listens for audio to be transmitted on the radio
    string state_updates_address = 4; // where the Server listens for audio to be transmitted on the radio
    int32 index = 5; // static index for displaying several servers consistently in a GUI
}

message PingPong{
    int64 ping = 1; // unix timestamp
}

// Audio frame consisting of the raw audio byte array + metadata
message Frame{
    Codec codec = 1;
    Channels channels = 2; // Number of channels
    int32 frame_length = 3; // Audio frame length (in bytes)
    int32 sampling_rate = 4; // Audio sampling rate
    int32 bit_depth = 5; // Audio bit depth (8...16 bit typically)
    bytes data = 6; // Audio packets as raw byte array
    string user_id = 8;
}

enum Channels {
    unknown = 0;
    mono = 1;
    stereo = 2;
}

enum Codec {
    none = 0;
    opus = 1;
    pcm = 2;
}

message State{
    bool rx_on = 1;
    string tx_user = 3;
}